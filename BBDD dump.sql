create table django_migrations
(
    id      bigint generated by default as identity
        primary key,
    app     varchar(255)             not null,
    name    varchar(255)             not null,
    applied timestamp with time zone not null
);

alter table django_migrations
    owner to friendsapp_user;

create table django_content_type
(
    id        integer generated by default as identity
        primary key,
    app_label varchar(100) not null,
    model     varchar(100) not null,
    constraint django_content_type_app_label_model_76bd3d3b_uniq
        unique (app_label, model)
);

alter table django_content_type
    owner to friendsapp_user;

create table auth_permission
(
    id              integer generated by default as identity
        primary key,
    name            varchar(255) not null,
    content_type_id integer      not null
        constraint auth_permission_content_type_id_2f476e4b_fk_django_co
            references django_content_type
            deferrable initially deferred,
    codename        varchar(100) not null,
    constraint auth_permission_content_type_id_codename_01ab375a_uniq
        unique (content_type_id, codename)
);

alter table auth_permission
    owner to friendsapp_user;

create index auth_permission_content_type_id_2f476e4b
    on auth_permission (content_type_id);

create table auth_group
(
    id   integer generated by default as identity
        primary key,
    name varchar(150) not null
        unique
);

alter table auth_group
    owner to friendsapp_user;

create index auth_group_name_a6ea08ec_like
    on auth_group (name varchar_pattern_ops);

create table auth_group_permissions
(
    id            bigint generated by default as identity
        primary key,
    group_id      integer not null
        constraint auth_group_permissions_group_id_b120cbf9_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    permission_id integer not null
        constraint auth_group_permissio_permission_id_84c5c92e_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint auth_group_permissions_group_id_permission_id_0cd325b0_uniq
        unique (group_id, permission_id)
);

alter table auth_group_permissions
    owner to friendsapp_user;

create index auth_group_permissions_group_id_b120cbf9
    on auth_group_permissions (group_id);

create index auth_group_permissions_permission_id_84c5c92e
    on auth_group_permissions (permission_id);

create table auth_user
(
    id           integer generated by default as identity
        primary key,
    password     varchar(128)             not null,
    last_login   timestamp with time zone,
    is_superuser boolean                  not null,
    username     varchar(150)             not null
        unique,
    first_name   varchar(150)             not null,
    last_name    varchar(150)             not null,
    email        varchar(254)             not null,
    is_staff     boolean                  not null,
    is_active    boolean                  not null,
    date_joined  timestamp with time zone not null
);

alter table auth_user
    owner to friendsapp_user;

create index auth_user_username_6821ab7c_like
    on auth_user (username varchar_pattern_ops);

create table auth_user_groups
(
    id       bigint generated by default as identity
        primary key,
    user_id  integer not null
        constraint auth_user_groups_user_id_6a12ed8b_fk_auth_user_id
            references auth_user
            deferrable initially deferred,
    group_id integer not null
        constraint auth_user_groups_group_id_97559544_fk_auth_group_id
            references auth_group
            deferrable initially deferred,
    constraint auth_user_groups_user_id_group_id_94350c0c_uniq
        unique (user_id, group_id)
);

alter table auth_user_groups
    owner to friendsapp_user;

create index auth_user_groups_user_id_6a12ed8b
    on auth_user_groups (user_id);

create index auth_user_groups_group_id_97559544
    on auth_user_groups (group_id);

create table auth_user_user_permissions
(
    id            bigint generated by default as identity
        primary key,
    user_id       integer not null
        constraint auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id
            references auth_user
            deferrable initially deferred,
    permission_id integer not null
        constraint auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm
            references auth_permission
            deferrable initially deferred,
    constraint auth_user_user_permissions_user_id_permission_id_14a6b632_uniq
        unique (user_id, permission_id)
);

alter table auth_user_user_permissions
    owner to friendsapp_user;

create index auth_user_user_permissions_user_id_a95ead1b
    on auth_user_user_permissions (user_id);

create index auth_user_user_permissions_permission_id_1fbb5f2c
    on auth_user_user_permissions (permission_id);

create table django_admin_log
(
    id              integer generated by default as identity
        primary key,
    action_time     timestamp with time zone not null,
    object_id       text,
    object_repr     varchar(200)             not null,
    action_flag     smallint                 not null
        constraint django_admin_log_action_flag_check
            check (action_flag >= 0),
    change_message  text                     not null,
    content_type_id integer
        constraint django_admin_log_content_type_id_c4bce8eb_fk_django_co
            references django_content_type
            deferrable initially deferred,
    user_id         integer                  not null
        constraint django_admin_log_user_id_c564eba6_fk_auth_user_id
            references auth_user
            deferrable initially deferred
);

alter table django_admin_log
    owner to friendsapp_user;

create index django_admin_log_content_type_id_c4bce8eb
    on django_admin_log (content_type_id);

create index django_admin_log_user_id_c564eba6
    on django_admin_log (user_id);

create table friends_user
(
    id       bigint generated by default as identity
        primary key,
    name     varchar(200)             not null,
    alias    varchar(200)             not null,
    email    varchar(200)             not null,
    password varchar(200)             not null,
    birthday timestamp with time zone not null
);

alter table friends_user
    owner to friendsapp_user;

create table friends_metauser
(
    id      bigint generated by default as identity
        primary key,
    user_id bigint not null
        unique
        constraint friends_metauser_user_id_1a88bd49_fk_friends_user_id
            references friends_user
            deferrable initially deferred
);

alter table friends_metauser
    owner to friendsapp_user;

create table friends_metauser_friends
(
    id          bigint generated by default as identity
        primary key,
    metauser_id bigint not null
        constraint friends_metauser_fri_metauser_id_1ac13e18_fk_friends_m
            references friends_metauser
            deferrable initially deferred,
    user_id     bigint not null
        constraint friends_metauser_friends_user_id_28a7cd32_fk_friends_user_id
            references friends_user
            deferrable initially deferred,
    constraint friends_metauser_friends_metauser_id_user_id_78bf7763_uniq
        unique (metauser_id, user_id)
);

alter table friends_metauser_friends
    owner to friendsapp_user;

create index friends_metauser_friends_metauser_id_1ac13e18
    on friends_metauser_friends (metauser_id);

create index friends_metauser_friends_user_id_28a7cd32
    on friends_metauser_friends (user_id);

create table django_session
(
    session_key  varchar(40)              not null
        primary key,
    session_data text                     not null,
    expire_date  timestamp with time zone not null
);

alter table django_session
    owner to friendsapp_user;

create index django_session_session_key_c0390e0f_like
    on django_session (session_key varchar_pattern_ops);

create index django_session_expire_date_a5c62663
    on django_session (expire_date);


